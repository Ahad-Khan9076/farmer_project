import 'package:flutter_local_notifications/flutter_local_notifications.dart';final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =FlutterLocalNotificationsPlugin();Future<void> showSoilConditionNotification(String message) async {  const AndroidNotificationDetails androidPlatformChannelSpecifics =  AndroidNotificationDetails(    'soil_condition_channel_id',    'Soil Condition Notifications',    importance: Importance.max,    priority: Priority.high,  );  const NotificationDetails platformChannelSpecifics =  NotificationDetails(android: androidPlatformChannelSpecifics);  await flutterLocalNotificationsPlugin.show(    0,    'Soil Condition Alert',    message,    platformChannelSpecifics,  );}Future<void> showWeatherChangeNotification(String message) async {  const AndroidNotificationDetails androidPlatformChannelSpecifics =  AndroidNotificationDetails(    'weather_change_channel_id',    'Weather Change Notifications',    importance: Importance.max,    priority: Priority.high,  );  const NotificationDetails platformChannelSpecifics =  NotificationDetails(android: androidPlatformChannelSpecifics);  await flutterLocalNotificationsPlugin.show(    1,    'Weather Change Alert',    message,    platformChannelSpecifics,  );}Future<void> showCommunityMessageNotification(String message) async {  const AndroidNotificationDetails androidPlatformChannelSpecifics =  AndroidNotificationDetails(    'community_message_channel_id',    'Community Messages',    importance: Importance.max,    priority: Priority.high,  );  const NotificationDetails platformChannelSpecifics =  NotificationDetails(android: androidPlatformChannelSpecifics);  await flutterLocalNotificationsPlugin.show(    2,    'New Community Message',    message,    platformChannelSpecifics,  );}